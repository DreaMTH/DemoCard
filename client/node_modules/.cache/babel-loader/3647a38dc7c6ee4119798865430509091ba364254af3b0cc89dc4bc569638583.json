{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddimc\\\\testDirForNvimProj\\\\web\\\\fs\\\\DemoCard\\\\client\\\\src\\\\pages\\\\registrationPage\\\\registrationPage.jsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport axios from \"../../axios.js\";\nimport styles from \"./registrationPage.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegistrationPage = () => {\n  _s();\n  var _errors$name, _errors$email, _errors$password, _errors$confirmPasswo;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      name: \"FirstName LastName\",\n      email: \"youremail@domen.com\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    mode: \"onBlur\"\n  });\n  const onSubmit = async values => {\n    if (values.password !== values.confirmPassword) {\n      return alert(\"Passwords are different!\");\n    }\n    axios.post(\"/auth/registration/\", values).then(response => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: response.data.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    }).catch(err => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: err.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.root,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form,\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          placeholder: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message,\n          ...register(\"name\", {\n            required: \"Field cannot be empty.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Full name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          placeholder: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n          ...register(\"email\", {\n            required: \"Field cannot be empty.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n          ...register(\"password\", {\n            required: \"Field cannot be empty.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          placeholder: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message,\n          ...register(\"confirmPassword\", {\n            required: \"Field cannot be empty.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Sign up!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(RegistrationPage, \"RcUlyA4GEHKh2CRkv6V7TGIZ2pY=\", false, function () {\n  return [useForm];\n});\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["useForm","axios","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","RegistrationPage","_s","_errors$name","_errors$email","_errors$password","_errors$confirmPasswo","register","handleSubmit","formState","errors","defaultValues","name","email","password","confirmPassword","mode","onSubmit","values","alert","post","then","response","children","data","message","fileName","_jsxFileName","lineNumber","columnNumber","catch","err","className","root","form","id","type","placeholder","required","htmlFor","value","_c","$RefreshReg$"],"sources":["C:/Users/ddimc/testDirForNvimProj/web/fs/DemoCard/client/src/pages/registrationPage/registrationPage.jsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport axios from \"../../axios.js\";\r\nimport styles from \"./registrationPage.module.css\";\r\n\r\nconst RegistrationPage = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      name: \"FirstName LastName\",\r\n      email: \"youremail@domen.com\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    mode: \"onBlur\",\r\n  });\r\n  const onSubmit = async (values) => {\r\n    if (values.password !== values.confirmPassword) {\r\n      return alert(\"Passwords are different!\");\r\n    }\r\n    axios\r\n      .post(\"/auth/registration/\", values)\r\n      .then((response) => {\r\n        return (\r\n          <div>\r\n            <h1>{response.data.message}</h1>\r\n          </div>\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        return (\r\n          <div>\r\n            <h1>{err.message}</h1>\r\n          </div>\r\n        );\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div className={styles.root}>\r\n        <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            placeholder={errors.name?.message}\r\n            {...register(\"name\", { required: \"Field cannot be empty.\" })}\r\n          />\r\n          <label htmlFor=\"name\">Full name:</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder={errors.email?.message}\r\n            {...register(\"email\", { required: \"Field cannot be empty.\" })}\r\n          />\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder={errors.password?.message}\r\n            {...register(\"password\", { required: \"Field cannot be empty.\" })}\r\n          />\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            placeholder={errors.confirmPassword?.message}\r\n            {...register(\"confirmPassword\", {\r\n              required: \"Field cannot be empty.\",\r\n            })}\r\n          />\r\n          <label htmlFor=\"confirmPassword\">Confirm password:</label>\r\n          <input type=\"submit\" value=\"Sign up!\" />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}