{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../axios.js\";\nexport const authintificationFetch = createAsyncThunk(\"auth/login\", async params => {\n  const {\n    data\n  } = await axios.post(\"auth/login\", params);\n  return data._doc;\n});\nconst initialState = {\n  data: null,\n  status: \"loading\"\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    logout: state => {\n      state.data = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(authintificationFetch.pending, state => {\n      state.data = null;\n      state.status = \"loading\";\n    }).addCase(authintificationFetch.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.status = \"loaded\";\n    }).addCase(authintificationFetch.rejected, state => {\n      state.status = \"error\";\n      state.data = null;\n    });\n  }\n});\nexport const authReducer = authSlice.reducer;\nexport const isAuth = state => Boolean(state.auth.data);\nexport const {\n  logout\n} = authSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","authintificationFetch","params","data","post","_doc","initialState","status","authSlice","name","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","authReducer","reducer","isAuth","Boolean","auth","actions"],"sources":["C:/Users/ddimc/testDirForNvimProj/web/fs/DemoCard/client/src/store/auth.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"../axios.js\";\r\nexport const authintificationFetch = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (params) => {\r\n    const { data } = await axios.post(\"auth/login\", params);\r\n    return data._doc;\r\n  },\r\n);\r\n\r\nconst initialState = {\r\n  data: null,\r\n  status: \"loading\",\r\n};\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.data = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(authintificationFetch.pending, (state) => {\r\n        state.data = null;\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(authintificationFetch.fulfilled, (state, action) => {\r\n        state.data = action.payload;\r\n        state.status = \"loaded\";\r\n      })\r\n      .addCase(authintificationFetch.rejected, (state) => {\r\n        state.status = \"error\";\r\n        state.data = null;\r\n      });\r\n  },\r\n});\r\nexport const authReducer = authSlice.reducer;\r\nexport const isAuth = (state) => Boolean(state.auth.data);\r\nexport const { logout } = authSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,MAAMC,qBAAqB,GAAGF,gBAAgB,CACnD,YAAY,EACZ,MAAOG,MAAM,IAAK;EAChB,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,YAAY,EAAEF,MAAM,CAAC;EACvD,OAAOC,IAAI,CAACE,IAAI;AAClB,CACF,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBH,IAAI,EAAE,IAAI;EACVI,MAAM,EAAE;AACV,CAAC;AACD,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBA,KAAK,CAACT,IAAI,GAAG,IAAI;IACnB;EACF,CAAC;EACDU,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACd,qBAAqB,CAACe,OAAO,EAAGJ,KAAK,IAAK;MACjDA,KAAK,CAACT,IAAI,GAAG,IAAI;MACjBS,KAAK,CAACL,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDQ,OAAO,CAACd,qBAAqB,CAACgB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC3DN,KAAK,CAACT,IAAI,GAAGe,MAAM,CAACC,OAAO;MAC3BP,KAAK,CAACL,MAAM,GAAG,QAAQ;IACzB,CAAC,CAAC,CACDQ,OAAO,CAACd,qBAAqB,CAACmB,QAAQ,EAAGR,KAAK,IAAK;MAClDA,KAAK,CAACL,MAAM,GAAG,OAAO;MACtBK,KAAK,CAACT,IAAI,GAAG,IAAI;IACnB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,OAAO,MAAMkB,WAAW,GAAGb,SAAS,CAACc,OAAO;AAC5C,OAAO,MAAMC,MAAM,GAAIX,KAAK,IAAKY,OAAO,CAACZ,KAAK,CAACa,IAAI,CAACtB,IAAI,CAAC;AACzD,OAAO,MAAM;EAAEQ;AAAO,CAAC,GAAGH,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}