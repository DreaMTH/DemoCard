{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddimc\\\\testDirForNvimProj\\\\web\\\\fs\\\\DemoCard\\\\client\\\\src\\\\pages\\\\registrationPage\\\\registrationPage.jsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport axios from \"../../axios.js\";\nimport styles from \"./registrationPage.module.css\";\nimport { Navigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegistrationPage = () => {\n  _s();\n  var _errors$name, _errors$email, _errors$password, _errors$confirmPasswo;\n  const [regSuccesss, setStatus] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      name: \"FirstName LastName\",\n      email: \"youremail@domen.com\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    mode: \"onBlur\"\n  });\n  const onSubmit = async values => {\n    if (values.password !== values.confirmPassword) {\n      return alert(\"Passwords are different!\");\n    }\n    axios.post(\"/auth/registration/\", values).then(response => {\n      alert(\"Success!\");\n      setStatus(true);\n    }).catch(err => alert(err.response.data.message));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.root,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form,\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          placeholder: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message,\n          ...register(\"name\", {\n            required: \"Field cannot be empty.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Full name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          placeholder: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n          ...register(\"email\", {\n            required: \"Field cannot be empty.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n          ...register(\"password\", {\n            required: \"Field cannot be empty.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          placeholder: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message,\n          ...register(\"confirmPassword\", {\n            required: \"Field cannot be empty.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Sign up!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(RegistrationPage, \"xABPc7lBLfctRWWIW3g8VfRaOJ0=\", false, function () {\n  return [useForm];\n});\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["useForm","axios","styles","Navigate","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","RegistrationPage","_s","_errors$name","_errors$email","_errors$password","_errors$confirmPasswo","regSuccesss","setStatus","register","handleSubmit","formState","errors","defaultValues","name","email","password","confirmPassword","mode","onSubmit","values","alert","post","then","response","catch","err","data","message","children","className","root","form","id","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","_c","$RefreshReg$"],"sources":["C:/Users/ddimc/testDirForNvimProj/web/fs/DemoCard/client/src/pages/registrationPage/registrationPage.jsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport axios from \"../../axios.js\";\r\nimport styles from \"./registrationPage.module.css\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst RegistrationPage = () => {\r\n  const [regSuccesss, setStatus] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      name: \"FirstName LastName\",\r\n      email: \"youremail@domen.com\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    mode: \"onBlur\",\r\n  });\r\n  const onSubmit = async (values) => {\r\n    if (values.password !== values.confirmPassword) {\r\n      return alert(\"Passwords are different!\");\r\n    }\r\n    axios\r\n      .post(\"/auth/registration/\", values)\r\n      .then((response) => {\r\n        alert(\"Success!\");\r\n        setStatus(true);\r\n      })\r\n      .catch((err) => alert(err.response.data.message));\r\n  };\r\n  return (\r\n    <>\r\n      <div className={styles.root}>\r\n        <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            placeholder={errors.name?.message}\r\n            {...register(\"name\", { required: \"Field cannot be empty.\" })}\r\n          />\r\n          <label htmlFor=\"name\">Full name:</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder={errors.email?.message}\r\n            {...register(\"email\", { required: \"Field cannot be empty.\" })}\r\n          />\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder={errors.password?.message}\r\n            {...register(\"password\", { required: \"Field cannot be empty.\" })}\r\n          />\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            placeholder={errors.confirmPassword?.message}\r\n            {...register(\"confirmPassword\", {\r\n              required: \"Field cannot be empty.\",\r\n            })}\r\n          />\r\n          <label htmlFor=\"confirmPassword\">Confirm password:</label>\r\n          <input type=\"submit\" value=\"Sign up!\" />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}