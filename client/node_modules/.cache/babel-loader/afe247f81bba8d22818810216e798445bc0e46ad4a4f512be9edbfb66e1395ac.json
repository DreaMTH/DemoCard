{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios.js\";\nexport const fetchUsers = createAsyncThunk(\"/users/fetchUsers\", async () => {\n  const {\n    data\n  } = await axios.get(\"/users\");\n  return data;\n});\nexport const usersSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    users: [],\n    status: \"loading\"\n  },\n  reducers: {\n    userById: (state, id) => {\n      return state.data.users.find(user => user._id === id);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, state => {\n      state.users = [];\n      state.status = \"loading\";\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.users = action.payload;\n      state.status = \"loaded\";\n    }).addCase(fetchUsers.rejected, state => {\n      state.status = \"error\";\n      state.users = [];\n    });\n  }\n});\nexport const usersReducer = usersSlice.reducer;\nexport const {\n  userById\n} = usersSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchUsers","data","get","usersSlice","name","initialState","users","status","reducers","userById","state","id","find","user","_id","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","usersReducer","reducer","actions"],"sources":["C:/Users/ddimc/testDirForNvimProj/web/fs/DemoCard/client/src/pages/usersPage/usersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios.js\";\r\n\r\nexport const fetchUsers = createAsyncThunk(\"/users/fetchUsers\", async () => {\r\n  const { data } = await axios.get(\"/users\");\r\n  return data;\r\n});\r\nexport const usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: {\r\n    users: [],\r\n    status: \"loading\",\r\n  },\r\n  reducers: {\r\n    userById: (state, id) => { return state.data.users.find(user => user._id === id)},\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUsers.pending, (state) => {\r\n        state.users = [];\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchUsers.fulfilled, (state, action) => {\r\n        state.users = action.payload;\r\n        state.status = \"loaded\";\r\n      })\r\n      .addCase(fetchUsers.rejected, (state) => {\r\n        state.status = \"error\";\r\n        state.users = [];\r\n      });\r\n  },\r\n});\r\nexport const usersReducer = usersSlice.reducer;\r\nexport const { userById } = usersSlice.actions;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,mBAAmB,EAAE,YAAY;EAC1E,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,QAAQ,CAAC;EAC1C,OAAOD,IAAI;AACb,CAAC,CAAC;AACF,OAAO,MAAME,UAAU,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,EAAE,KAAK;MAAE,OAAOD,KAAK,CAACT,IAAI,CAACK,KAAK,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKH,EAAE,CAAC;IAAA;EAClF,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACjB,UAAU,CAACkB,OAAO,EAAGR,KAAK,IAAK;MACtCA,KAAK,CAACJ,KAAK,GAAG,EAAE;MAChBI,KAAK,CAACH,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDU,OAAO,CAACjB,UAAU,CAACmB,SAAS,EAAE,CAACT,KAAK,EAAEU,MAAM,KAAK;MAChDV,KAAK,CAACJ,KAAK,GAAGc,MAAM,CAACC,OAAO;MAC5BX,KAAK,CAACH,MAAM,GAAG,QAAQ;IACzB,CAAC,CAAC,CACDU,OAAO,CAACjB,UAAU,CAACsB,QAAQ,EAAGZ,KAAK,IAAK;MACvCA,KAAK,CAACH,MAAM,GAAG,OAAO;MACtBG,KAAK,CAACJ,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,OAAO,MAAMiB,YAAY,GAAGpB,UAAU,CAACqB,OAAO;AAC9C,OAAO,MAAM;EAAEf;AAAS,CAAC,GAAGN,UAAU,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}